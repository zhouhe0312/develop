server:
  port: 8085
  tomcat:
    uri-encoding: UTF-8

jasypt:
  encryptor:
    password: 123456

spring:
  application:
    name: iatp-fileserver
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/iatp-dev?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull
    username: root
    password: ENC(CGJX+ysgyIMNbTbDiQzqcg==)
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        namespace: public
        register-enabled: true
  servlet:
    multipart:
      max-request-size: 1024MB # 设置最大的请求文件的大小
      max-file-size: 200MB # 设置单个文件的最大长度
      enabled: true # 启用http上传处理
  http:
    encoding:
      charset: UTF-8

ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000

mybatis-plus:
  #MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法（XML 中有自定义实现），需要进行该配置，告诉 Mapper 所对应的 XML 文件位置。
  mapper-locations: classpath:mapper/*.xml
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）。
  type-aliases-package: cn.v5cn.gasmeter.authserver.domain
  #通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：
  #  ExecutorType.SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）
  #  ExecutorType.REUSE：该执行器类型会复用预处理语句（PreparedStatement）
  #  ExecutorType.BATCH：该执行器类型会批量执行所有的更新语句
  #  默认值：sample
  executor-type: reuse
  global-config:
    # 是否自动刷新 Mapper 对应的 XML 文件，默认不自动刷新。
    # 如果配置了该属性，Mapper 对应的 XML 文件会自动刷新，更改 XML 文件后，无需再次重启工程，由此节省大量时间。
    # 生产环境改成false
    refresh: true
    # 是否缓存 Sql 解析，默认不缓存。
    sql-parser-cache: false
    db-config:
      # 数据库类型,默认值为未知的数据库类型 如果值为OTHER,启动时会根据数据库连接url获取数据库类型;如果不是OTHER则不会自动获取数据库类型
      db-type: mysql
      # 全局默认主键类型
      id-type: id_worker
      # 逻辑已删除值
      logic-delete-value: 0
      # 逻辑未删除值
      logic-not-delete-value: 1
      field-strategy: not_empty
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

logging:
  level:
    org.springframework: info

iatp:
  fileserver:
    path: E:\\upload


#缓存实现类型，不配默认为内嵌RocksDB实现，可配置为redis(type = redis)实现（需要配置spring.redisson.address等参数）和 JDK 内置对象实现（type = jdk）,
cache.type: redis
#redis连接
spring.redisson.address: 127.0.0.1:6379
spring.redisson.database: 2
#spring.redisson.password: xxx